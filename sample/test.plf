(check
;; Declarations
(% p (term Bool)
(% A1 (th_holds true)
(% A0 (th_holds (and (p_app p) (not (p_app p))))
(% f (term (arrow (BitVec 4) (BitVec 4)))
(% A1 (th_holds (= (BitVec 4) (a_var_bv 4 v1) (bvand 4 (a_bv 4 (bvc b1 (bvc b0 (bvc b0 (bvc b0  bvn))))) (a_bv 4 (bvc b0 (bvc b1 (bvc b0 (bvc b1  bvn))))))))
(% A0 (th_holds (= (BitVec 4) (a_var_bv 4 v0) (bvnot 4  (a_bv 4 (bvc b0 (bvc b0 (bvc b0 (bvc b0  bvn))))))))
(% A0 (th_holds (not (= (BitVec 4) (apply _ _ f (apply _ _ g (apply _ _ h (a_var_bv 4 v0)))) (apply _ _ f (apply _ _ g (apply _ _ h (a_var_bv 4 v1)))))))
(% A2 (th_holds (= (BitVec 4) (a_var_bv 4 v1) (a_bv 4 (bvc b1 (bvc b0 (bvc b0 (bvc b0  bvn)))))))
(% A1 (th_holds (= (BitVec 4) (a_var_bv 4 v0) (a_bv 4 (bvc b0 (bvc b0 (bvc b0 (bvc b0  bvn)))))))
(% A0 (th_holds (= (BitVec 4) (a_var_bv 4 v0) (a_var_bv 4 v1)))(% i1 (term Index)
(% a1 (term (Array Index Element))
(% A2 (th_holds true)
(% A1 (th_holds (not (= (Array Index Element) a1 a2)))
(% A0 (th_holds (= (Array Index Element) (apply _ _ (apply _ _ (apply _ _ (write Index Element) a1) i1) (apply _ _ (apply _ _ (read Index Element) a2) i1) )  (apply _ _ (apply _ _ (apply _ _ (write Index Element) a2) i1) (apply _ _ (apply _ _ (read Index Element) a1) i1) ) ))

(: (holds cln)

;; Printing deferred declarations 


;; Printing the global let map ;; Printing aliasing declarations 


;; Rewrites for Lemmas 

;; In the preprocessor we trust 
(th_let_pf _ (trust_f (and (p_app p) (not (p_app p)))) (\ .PA240

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom (p_app p) (\ .v2 (\ .a2
(satlem _ _ (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (and_elim_1 _ _ .PA240) .l4)))) (\ .pb4
(satlem _ _ (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 (and_elim_2 _ _ .PA240))))) (\ .pb5
;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


;; Bit-blasting learned clauses 

;; Printing final unsat proof 
(satlem_simplify _ _ _ (Q _ _ .pb5 .pb4 .v2) (\ empty empty))))))))))))))))))))))))))))
;;

